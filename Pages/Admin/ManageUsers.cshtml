@page
@model EMedicalClaimRefundSystem.Pages.ManageUsersModel
@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Manage User Page";
}


<h1>@ViewData["Title"]</h1>


<div class="container">
    @Html.AntiForgeryToken()
    <br />
    <div class="row">
        <a href="/Admin/AddAccount" class="col-sm-2 btn btn-primary">Add+</a>
        <div class="col-sm-6"></div>
        <input class="col-sm-2 btn btn-danger " type="button" value="Delete" onclick="DeleteUsers()"/>
        <input class="col-sm-2 btn btn-info" type="button" value="Disable" onclick="BlockUsers()"/>
</div>
    <br />
    <div style="width:90%; margin:0 auto;">
        <table id="usersTable" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0">
            <thead class="thead-dark">
                <tr>
                    <th><input name="select_all" value="1" type="checkbox"></th>
                    <th>ID</th>
                    <th>Full Name</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Account Status</th>
                </tr>
            </thead>
        </table>
    </div>
</div>



    <script>

    var rows_selected = [];
    let table;
    //
    // Updates "Select all" control in a data table
    //
    function updateDataTableSelectAllCtrl(table){
       var $table             = table.table().node();
       var $chkbox_all        = $('tbody input[type="checkbox"]', $table);
       var $chkbox_checked    = $('tbody input[type="checkbox"]:checked', $table);
       var chkbox_select_all  = $('thead input[name="select_all"]', $table).get(0);

       // If none of the checkboxes are checked
       if($chkbox_checked.length === 0){
          chkbox_select_all.checked = false;
          if('indeterminate' in chkbox_select_all){
             chkbox_select_all.indeterminate = false;
          }

       // If all of the checkboxes are checked
       } else if ($chkbox_checked.length === $chkbox_all.length){
          chkbox_select_all.checked = true;
          if('indeterminate' in chkbox_select_all){
             chkbox_select_all.indeterminate = false;
          }

       // If some of the checkboxes are checked
       } else {
          chkbox_select_all.checked = true;
          if('indeterminate' in chkbox_select_all){
             chkbox_select_all.indeterminate = true;
          }
       }
    }
    $(document).ready(function () {            
            //$.ajax({
            //    type: "POST",
            //    beforeSend: function (xhr) {
            //        xhr.setRequestHeader("X-XSRF-Token",
            //            $('input:hidden[name="__RequestVerificationToken"]').val());
            //    },
            //    url: "/Admin/ManageUsers?handler=GetUsers",
            //    contentType: "application/json; charset=utf-8",
            //    dataType: "json",
            //    success: function (response) {
            //        var jsonObject = $.parseJSON(JSON.stringify(response));                    
            //        table = $('#usersTable').DataTable({
            //            data: jsonObject,
            //            //data : response,
            //            columns: [                            
            //                {
            //                    data:   "Id",
            //                    render: function ( data, type, row ) {
                                    
            //                            return '<input id='+data+' type="checkbox">';                                    
            //                    },                                
            //                },
            //                {
            //                    "render": function (data, type, full, meta) {
            //                        return meta.row;
            //                    }
            //                },
            //                { "data": "FullName" },
            //                { "data": "Email" },
            //                {
            //                    "data": "Roles",
            //                    "render": function (data, type, full, meta) {
            //                        return JSON.stringify(data);
            //                    }
            //                }
            //            ],
            //            searching: true                       
            //        });

            //        // Handle click on checkbox
            //       $('#usersTable tbody').on('click', 'input[type="checkbox"]', function(e){
            //          var $row = $(this).closest('tr');

            //          // Get row data
            //          var data = table.row($row).data();

            //          // Get row ID
            //          var rowId = data.Id;

            //          // Determine whether row ID is in the list of selected row IDs 
            //          var index = $.inArray(rowId, rows_selected);

            //          // If checkbox is checked and row ID is not in list of selected row IDs
            //          if(this.checked && index === -1){
            //             rows_selected.push(rowId);

            //          // Otherwise, if checkbox is not checked and row ID is in list of selected row IDs
            //          } else if (!this.checked && index !== -1){
            //             rows_selected.splice(index, 1);
            //          }

            //          if(this.checked){
            //             $row.addClass('selected');
            //          } else {
            //             $row.removeClass('selected');
            //          }

            //          // Update state of "Select all" control
            //          updateDataTableSelectAllCtrl(table);

            //          // Prevent click event from propagating to parent
            //          e.stopPropagation();
            //       });


            //        // Handle click on "Select all" control
            //       $('thead input[name="select_all"]', table.table().container()).on('click', function(e){
            //          if(this.checked){
            //             $('#usersTable tbody input[type="checkbox"]:not(:checked)').trigger('click');
            //          } else {
            //             $('#usersTable tbody input[type="checkbox"]:checked').trigger('click');
            //          }

            //          // Prevent click event from propagating to parent
            //          e.stopPropagation();
            //       });
            //    }
            //});


        //var jsonObject = $.parseJSON(JSON.stringify(response));                    
        table = $('#usersTable').DataTable({           
            "processing": true,
            "serverSide": false,
            "ajax": {
                "url": "/Admin/ManageUsers?handler=Users",
                "type": "GET",
                "beforeSend" : function (xhr) {
                    xhr.setRequestHeader("X-XSRF-Token",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },                
                "dataSrc": '',                               
            },
            //data : response,
            searching: true,
            "pageLength": 50,
            columns: [                            
                {
                    data:   "Id",
                    render: function ( data, type, row ) {
                                    
                            return '<input id='+data+' type="checkbox">';                                    
                    }                    
                },
                {
                    "render": function (data, type, full, meta) {
                        return meta.row;
                    }
                },
                { "data": "FullName" },
                { "data": "Email" },
                {
                    "data": "Roles",
                    "render": function (data, type, full, meta) {
                        return JSON.stringify(data);
                    }
                },
                {
                    data: {status : "Blocked", id : "Id"},
                    render: function (data, type, row) {
                        if (data.Blocked)
                            return '<input id=' + data.Id + ' type="Button" value="Unblock now!" onclick=UnBlockUsers(this) class="btn btn-secondary">';
                        else
                            return 'Active';
                    }                    
                },
            ],                                   
        });

        // Handle click on checkbox
        $('#usersTable tbody').on('click', 'input[type="checkbox"]', function(e){
            var $row = $(this).closest('tr');

            // Get row data
            var data = table.row($row).data();

            // Get row ID
            var rowId = data.Id;

            // Determine whether row ID is in the list of selected row IDs 
            var index = $.inArray(rowId, rows_selected);

            // If checkbox is checked and row ID is not in list of selected row IDs
            if(this.checked && index === -1){
                rows_selected.push(rowId);

            // Otherwise, if checkbox is not checked and row ID is in list of selected row IDs
            } else if (!this.checked && index !== -1){
                rows_selected.splice(index, 1);
            }

            if(this.checked){
                $row.addClass('selected');
            } else {
                $row.removeClass('selected');
            }

            // Update state of "Select all" control
            updateDataTableSelectAllCtrl(table);

            // Prevent click event from propagating to parent
            e.stopPropagation();
        });


        // Handle click on "Select all" control
        $('thead input[name="select_all"]', table.table().container()).on('click', function(e){
            if(this.checked){
                $('#usersTable tbody input[type="checkbox"]:not(:checked)').trigger('click');
            } else {
                $('#usersTable tbody input[type="checkbox"]:checked').trigger('click');
            }

            // Prevent click event from propagating to parent
            e.stopPropagation();
        });

        });
    function DeleteUsers() {
        
        var jsonselectedrows = JSON.stringify(rows_selected);
        alert("CheckBox ids are " + jsonselectedrows);
        $.ajax({
            type: "POST",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("X-XSRF-Token",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            url: "/Admin/ManageUsers?handler=DeleteUsers",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: jsonselectedrows,
            success: function (response) {
                table.ajax.reload();
            }
        });
            }
    function BlockUsers() {
        
        var jsonselectedrows = JSON.stringify(rows_selected);
        //alert("CheckBox ids are " + jsonselectedrows);
        $.ajax({
            type: "POST",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("X-XSRF-Token",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            url: "/Admin/ManageUsers?handler=BlockUsers",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: jsonselectedrows,
            success: function (response) {
                table.ajax.reload();
            }
        });
            }
    function UnBlockUsers(button) {

        var jsonselectedrows = JSON.stringify(button.id);
        //alert("CheckBox ids are " + jsonselectedrows);
        $.ajax({
            type: "POST",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("X-XSRF-Token",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            url: "/Admin/ManageUsers?handler=UnBlockUsers",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: jsonselectedrows,
            success: function (response) {
                table.ajax.reload();
            }
        });
    }
    </script>
